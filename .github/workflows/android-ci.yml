name: Android CI (Build Debug APK)

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JAVA_TOOL_OPTIONS: -Xmx3g

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install Gradle + generate wrapper
        run: |
          sudo apt-get update
          sudo apt-get install -y gradle
          gradle wrapper --gradle-version 8.7
          ./gradlew --version || true

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept SDK licenses
        run: yes | sdkmanager --licenses || true

      - name: Install SDK packages (SDK 34 + 35)
        shell: bash
        run: |
          set -euo pipefail
          pkgs=(
            "platform-tools"
            "platforms;android-34" "build-tools;34.0.0"
            "platforms;android-35" "build-tools;35.0.0"
          )
          for p in "${pkgs[@]}"; do
            echo "Installing: $p"
            for i in {1..3}; do
              if sdkmanager --install "$p"; then break; fi
              echo "Retry $i for $p..."; sleep 5
            done
          done
          yes | sdkmanager --licenses || true

      - name: Show project structure
        run: |
          pwd
          ls -la
          echo "---- settings.gradle(.kts) ----"
          cat settings.gradle* || true
          echo "---- modules at repo root ----"
          ls -la */build.gradle* || true

      - name: Make Gradle executable
        run: chmod +x gradlew

      # üîé DIAGNOSTICS ‚Äî list modules and assemble tasks
      - name: Gradle projects
        run: ./gradlew projects | tee projects.txt

      - name: Gradle tasks (look for assemble/package)
        run: ./gradlew tasks --all | tee tasks.txt

      # üß± Build ALL debug APKs (no module assumption)
      - name: Assemble ALL debug APKs (verbose, to file)
        run: ./gradlew --no-daemon --stacktrace --info assembleDebug | tee build.log

      # üìç Show where APKs landed
      - name: List APK outputs
        run: |
          echo "Searching for APKs across the repo..."
          find "$GITHUB_WORKSPACE" -type f -name "*.apk" -print || true
          echo "Listing */build/outputs directories:"
          find "$GITHUB_WORKSPACE" -type d -path "*/build/outputs" -print || true

      # üì¶ Upload APKs from anywhere
      - name: Upload APK(s)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: debug-apks
          path: |
            **/build/outputs/apk/**/*.apk
            **/outputs/**/*.apk
            **/*.apk
          if-no-files-found: warn
          retention-days: 7

      # Always upload logs so we can see exactly what Gradle did
      - name: Upload gradle build log + listings
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-logs
          path: |
            build.log
            projects.txt
            tasks.txt
          retention-days: 7

      # Fallback: upload all build dirs
      - name: Upload all build dirs (fallback)
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: all-build-dirs
          path: "**/build/**"
          retention-days: 3
